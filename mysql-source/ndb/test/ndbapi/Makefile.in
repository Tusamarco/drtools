# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2004-2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ndbtest_PROGRAMS = flexBench$(EXEEXT) drop_all_tabs$(EXEEXT) \
	create_all_tabs$(EXEEXT) create_tab$(EXEEXT) \
	flexAsynch$(EXEEXT) flexBench$(EXEEXT) flexHammer$(EXEEXT) \
	flexTT$(EXEEXT) testBackup$(EXEEXT) testBasic$(EXEEXT) \
	testBasicAsynch$(EXEEXT) testBlobs$(EXEEXT) \
	testDataBuffers$(EXEEXT) testDict$(EXEEXT) testIndex$(EXEEXT) \
	testMgm$(EXEEXT) testNdbApi$(EXEEXT) testNodeRestart$(EXEEXT) \
	testOIBasic$(EXEEXT) testOperations$(EXEEXT) \
	testRestartGci$(EXEEXT) testScan$(EXEEXT) \
	testInterpreter$(EXEEXT) testScanFilter$(EXEEXT) \
	testScanInterpreter$(EXEEXT) testScanPerf$(EXEEXT) \
	testSystemRestart$(EXEEXT) testTimeout$(EXEEXT) \
	testTransactions$(EXEEXT) testDeadlock$(EXEEXT) \
	ndbapi_slow_select$(EXEEXT) testReadPerf$(EXEEXT) \
	testLcp$(EXEEXT) testPartitioning$(EXEEXT) \
	testBitfield$(EXEEXT) DbCreate$(EXEEXT) \
	DbAsyncGenerator$(EXEEXT) testSRBank$(EXEEXT)
EXTRA_PROGRAMS = test_event$(EXEEXT) test_event_merge$(EXEEXT) \
	test_event_multi_table$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/ndb/config/common.mk.am \
	$(top_srcdir)/ndb/config/type_ndbapitest.mk.am
subdir = ndb/test/ndbapi
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac-macros/alloca.m4 \
	$(top_srcdir)/config/ac-macros/check_cpu.m4 \
	$(top_srcdir)/config/ac-macros/character_sets.m4 \
	$(top_srcdir)/config/ac-macros/compiler_flag.m4 \
	$(top_srcdir)/config/ac-macros/ha_archive.m4 \
	$(top_srcdir)/config/ac-macros/ha_berkeley.m4 \
	$(top_srcdir)/config/ac-macros/ha_blackhole.m4 \
	$(top_srcdir)/config/ac-macros/ha_example.m4 \
	$(top_srcdir)/config/ac-macros/ha_federated.m4 \
	$(top_srcdir)/config/ac-macros/ha_innodb.m4 \
	$(top_srcdir)/config/ac-macros/ha_ndbcluster.m4 \
	$(top_srcdir)/config/ac-macros/ha_tina.m4 \
	$(top_srcdir)/config/ac-macros/large_file.m4 \
	$(top_srcdir)/config/ac-macros/misc.m4 \
	$(top_srcdir)/config/ac-macros/openssl.m4 \
	$(top_srcdir)/config/ac-macros/readline.m4 \
	$(top_srcdir)/config/ac-macros/yassl.m4 \
	$(top_srcdir)/config/ac-macros/zlib.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(ndbtestdir)"
ndbtestPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(ndbtest_PROGRAMS)
am_DbAsyncGenerator_OBJECTS = mainAsyncGenerator.$(OBJEXT) \
	asyncGenerator.$(OBJEXT) ndb_async2.$(OBJEXT)
DbAsyncGenerator_OBJECTS = $(am_DbAsyncGenerator_OBJECTS)
DbAsyncGenerator_LDADD = $(LDADD)
DbAsyncGenerator_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_DbCreate_OBJECTS = mainPopulate.$(OBJEXT) dbPopulate.$(OBJEXT) \
	userInterface.$(OBJEXT)
DbCreate_OBJECTS = $(am_DbCreate_OBJECTS)
DbCreate_LDADD = $(LDADD)
DbCreate_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_create_all_tabs_OBJECTS = create_all_tabs.$(OBJEXT)
create_all_tabs_OBJECTS = $(am_create_all_tabs_OBJECTS)
create_all_tabs_LDADD = $(LDADD)
create_all_tabs_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_create_tab_OBJECTS = create_tab.$(OBJEXT)
create_tab_OBJECTS = $(am_create_tab_OBJECTS)
create_tab_LDADD = $(LDADD)
create_tab_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_drop_all_tabs_OBJECTS = drop_all_tabs.$(OBJEXT)
drop_all_tabs_OBJECTS = $(am_drop_all_tabs_OBJECTS)
drop_all_tabs_LDADD = $(LDADD)
drop_all_tabs_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_flexAsynch_OBJECTS = flexAsynch.$(OBJEXT)
flexAsynch_OBJECTS = $(am_flexAsynch_OBJECTS)
flexAsynch_LDADD = $(LDADD)
flexAsynch_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_flexBench_OBJECTS = flexBench.$(OBJEXT)
flexBench_OBJECTS = $(am_flexBench_OBJECTS)
flexBench_LDADD = $(LDADD)
flexBench_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_flexHammer_OBJECTS = flexHammer.$(OBJEXT)
flexHammer_OBJECTS = $(am_flexHammer_OBJECTS)
flexHammer_LDADD = $(LDADD)
flexHammer_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_flexTT_OBJECTS = flexTT.$(OBJEXT)
flexTT_OBJECTS = $(am_flexTT_OBJECTS)
flexTT_LDADD = $(LDADD)
flexTT_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_ndbapi_slow_select_OBJECTS = slow_select.$(OBJEXT)
ndbapi_slow_select_OBJECTS = $(am_ndbapi_slow_select_OBJECTS)
ndbapi_slow_select_LDADD = $(LDADD)
ndbapi_slow_select_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testBackup_OBJECTS = testBackup.$(OBJEXT)
testBackup_OBJECTS = $(am_testBackup_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
testBackup_DEPENDENCIES = $(am__DEPENDENCIES_1) bank/libbank.a
am_testBasic_OBJECTS = testBasic.$(OBJEXT)
testBasic_OBJECTS = $(am_testBasic_OBJECTS)
testBasic_LDADD = $(LDADD)
testBasic_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testBasicAsynch_OBJECTS = testBasicAsynch.$(OBJEXT)
testBasicAsynch_OBJECTS = $(am_testBasicAsynch_OBJECTS)
testBasicAsynch_LDADD = $(LDADD)
testBasicAsynch_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testBitfield_OBJECTS = testBitfield.$(OBJEXT)
testBitfield_OBJECTS = $(am_testBitfield_OBJECTS)
testBitfield_LDADD = $(LDADD)
testBitfield_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testBlobs_OBJECTS = testBlobs.$(OBJEXT)
testBlobs_OBJECTS = $(am_testBlobs_OBJECTS)
testBlobs_LDADD = $(LDADD)
testBlobs_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testDataBuffers_OBJECTS = testDataBuffers.$(OBJEXT)
testDataBuffers_OBJECTS = $(am_testDataBuffers_OBJECTS)
testDataBuffers_LDADD = $(LDADD)
testDataBuffers_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testDeadlock_OBJECTS = testDeadlock.$(OBJEXT)
testDeadlock_OBJECTS = $(am_testDeadlock_OBJECTS)
testDeadlock_LDADD = $(LDADD)
testDeadlock_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testDict_OBJECTS = testDict.$(OBJEXT)
testDict_OBJECTS = $(am_testDict_OBJECTS)
testDict_LDADD = $(LDADD)
testDict_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testIndex_OBJECTS = testIndex.$(OBJEXT)
testIndex_OBJECTS = $(am_testIndex_OBJECTS)
testIndex_LDADD = $(LDADD)
testIndex_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testInterpreter_OBJECTS = testInterpreter.$(OBJEXT)
testInterpreter_OBJECTS = $(am_testInterpreter_OBJECTS)
testInterpreter_LDADD = $(LDADD)
testInterpreter_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testLcp_OBJECTS = testLcp.$(OBJEXT)
testLcp_OBJECTS = $(am_testLcp_OBJECTS)
testLcp_LDADD = $(LDADD)
testLcp_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testMgm_OBJECTS = testMgm.$(OBJEXT)
testMgm_OBJECTS = $(am_testMgm_OBJECTS)
testMgm_LDADD = $(LDADD)
testMgm_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testNdbApi_OBJECTS = testNdbApi.$(OBJEXT)
testNdbApi_OBJECTS = $(am_testNdbApi_OBJECTS)
testNdbApi_LDADD = $(LDADD)
testNdbApi_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testNodeRestart_OBJECTS = testNodeRestart.$(OBJEXT)
testNodeRestart_OBJECTS = $(am_testNodeRestart_OBJECTS)
testNodeRestart_LDADD = $(LDADD)
testNodeRestart_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testOIBasic_OBJECTS = testOIBasic.$(OBJEXT)
testOIBasic_OBJECTS = $(am_testOIBasic_OBJECTS)
testOIBasic_LDADD = $(LDADD)
testOIBasic_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testOperations_OBJECTS = testOperations.$(OBJEXT)
testOperations_OBJECTS = $(am_testOperations_OBJECTS)
testOperations_LDADD = $(LDADD)
testOperations_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testPartitioning_OBJECTS = testPartitioning.$(OBJEXT)
testPartitioning_OBJECTS = $(am_testPartitioning_OBJECTS)
testPartitioning_LDADD = $(LDADD)
testPartitioning_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testReadPerf_OBJECTS = testReadPerf.$(OBJEXT)
testReadPerf_OBJECTS = $(am_testReadPerf_OBJECTS)
testReadPerf_LDADD = $(LDADD)
testReadPerf_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testRestartGci_OBJECTS = testRestartGci.$(OBJEXT)
testRestartGci_OBJECTS = $(am_testRestartGci_OBJECTS)
testRestartGci_LDADD = $(LDADD)
testRestartGci_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testSRBank_OBJECTS = testSRBank.$(OBJEXT)
testSRBank_OBJECTS = $(am_testSRBank_OBJECTS)
testSRBank_DEPENDENCIES = bank/libbank.a $(am__DEPENDENCIES_1)
am_testScan_OBJECTS = testScan.$(OBJEXT)
testScan_OBJECTS = $(am_testScan_OBJECTS)
testScan_LDADD = $(LDADD)
testScan_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testScanFilter_OBJECTS = testScanFilter.$(OBJEXT)
testScanFilter_OBJECTS = $(am_testScanFilter_OBJECTS)
testScanFilter_LDADD = $(LDADD)
testScanFilter_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testScanInterpreter_OBJECTS = testScanInterpreter.$(OBJEXT)
testScanInterpreter_OBJECTS = $(am_testScanInterpreter_OBJECTS)
testScanInterpreter_LDADD = $(LDADD)
testScanInterpreter_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testScanPerf_OBJECTS = testScanPerf.$(OBJEXT)
testScanPerf_OBJECTS = $(am_testScanPerf_OBJECTS)
testScanPerf_LDADD = $(LDADD)
testScanPerf_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testSystemRestart_OBJECTS = testSystemRestart.$(OBJEXT)
testSystemRestart_OBJECTS = $(am_testSystemRestart_OBJECTS)
testSystemRestart_LDADD = $(LDADD)
testSystemRestart_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testTimeout_OBJECTS = testTimeout.$(OBJEXT)
testTimeout_OBJECTS = $(am_testTimeout_OBJECTS)
testTimeout_LDADD = $(LDADD)
testTimeout_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_testTransactions_OBJECTS = testTransactions.$(OBJEXT)
testTransactions_OBJECTS = $(am_testTransactions_OBJECTS)
testTransactions_LDADD = $(LDADD)
testTransactions_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_test_event_OBJECTS = test_event.$(OBJEXT)
test_event_OBJECTS = $(am_test_event_OBJECTS)
test_event_LDADD = $(LDADD)
test_event_DEPENDENCIES = $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_test_event_merge_OBJECTS = test_event_merge.$(OBJEXT)
test_event_merge_OBJECTS = $(am_test_event_merge_OBJECTS)
test_event_merge_LDADD = $(LDADD)
test_event_merge_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_test_event_multi_table_OBJECTS = test_event_multi_table.$(OBJEXT)
test_event_multi_table_OBJECTS = $(am_test_event_multi_table_OBJECTS)
test_event_multi_table_LDADD = $(LDADD)
test_event_multi_table_DEPENDENCIES =  \
	$(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(DbAsyncGenerator_SOURCES) $(DbCreate_SOURCES) \
	$(create_all_tabs_SOURCES) $(create_tab_SOURCES) \
	$(drop_all_tabs_SOURCES) $(flexAsynch_SOURCES) \
	$(flexBench_SOURCES) $(flexHammer_SOURCES) $(flexTT_SOURCES) \
	$(ndbapi_slow_select_SOURCES) $(testBackup_SOURCES) \
	$(testBasic_SOURCES) $(testBasicAsynch_SOURCES) \
	$(testBitfield_SOURCES) $(testBlobs_SOURCES) \
	$(testDataBuffers_SOURCES) $(testDeadlock_SOURCES) \
	$(testDict_SOURCES) $(testIndex_SOURCES) \
	$(testInterpreter_SOURCES) $(testLcp_SOURCES) \
	$(testMgm_SOURCES) $(testNdbApi_SOURCES) \
	$(testNodeRestart_SOURCES) $(testOIBasic_SOURCES) \
	$(testOperations_SOURCES) $(testPartitioning_SOURCES) \
	$(testReadPerf_SOURCES) $(testRestartGci_SOURCES) \
	$(testSRBank_SOURCES) $(testScan_SOURCES) \
	$(testScanFilter_SOURCES) $(testScanInterpreter_SOURCES) \
	$(testScanPerf_SOURCES) $(testSystemRestart_SOURCES) \
	$(testTimeout_SOURCES) $(testTransactions_SOURCES) \
	$(test_event_SOURCES) $(test_event_merge_SOURCES) \
	$(test_event_multi_table_SOURCES)
DIST_SOURCES = $(DbAsyncGenerator_SOURCES) $(DbCreate_SOURCES) \
	$(create_all_tabs_SOURCES) $(create_tab_SOURCES) \
	$(drop_all_tabs_SOURCES) $(flexAsynch_SOURCES) \
	$(flexBench_SOURCES) $(flexHammer_SOURCES) $(flexTT_SOURCES) \
	$(ndbapi_slow_select_SOURCES) $(testBackup_SOURCES) \
	$(testBasic_SOURCES) $(testBasicAsynch_SOURCES) \
	$(testBitfield_SOURCES) $(testBlobs_SOURCES) \
	$(testDataBuffers_SOURCES) $(testDeadlock_SOURCES) \
	$(testDict_SOURCES) $(testIndex_SOURCES) \
	$(testInterpreter_SOURCES) $(testLcp_SOURCES) \
	$(testMgm_SOURCES) $(testNdbApi_SOURCES) \
	$(testNodeRestart_SOURCES) $(testOIBasic_SOURCES) \
	$(testOperations_SOURCES) $(testPartitioning_SOURCES) \
	$(testReadPerf_SOURCES) $(testRestartGci_SOURCES) \
	$(testSRBank_SOURCES) $(testScan_SOURCES) \
	$(testScanFilter_SOURCES) $(testScanInterpreter_SOURCES) \
	$(testScanPerf_SOURCES) $(testSystemRestart_SOURCES) \
	$(testTimeout_SOURCES) $(testTransactions_SOURCES) \
	$(test_event_SOURCES) $(test_event_merge_SOURCES) \
	$(test_event_multi_table_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
AS = @AS@
ASSEMBLER_FALSE = @ASSEMBLER_FALSE@
ASSEMBLER_TRUE = @ASSEMBLER_TRUE@
ASSEMBLER_sparc32_FALSE = @ASSEMBLER_sparc32_FALSE@
ASSEMBLER_sparc32_TRUE = @ASSEMBLER_sparc32_TRUE@
ASSEMBLER_sparc64_FALSE = @ASSEMBLER_sparc64_FALSE@
ASSEMBLER_sparc64_TRUE = @ASSEMBLER_sparc64_TRUE@
ASSEMBLER_x86_FALSE = @ASSEMBLER_x86_FALSE@
ASSEMBLER_x86_TRUE = @ASSEMBLER_x86_TRUE@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AVAILABLE_LANGUAGES = @AVAILABLE_LANGUAGES@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CC_VERSION = @CC_VERSION@
CFLAGS = @CFLAGS@
CHECK_PID = @CHECK_PID@
CHMOD = @CHMOD@
CLIENT_EXTRA_LDFLAGS = @CLIENT_EXTRA_LDFLAGS@
CLIENT_LIBS = @CLIENT_LIBS@
CMP = @CMP@
COMPILATION_COMMENT = @COMPILATION_COMMENT@
COMPILE_PSTACK_FALSE = @COMPILE_PSTACK_FALSE@
COMPILE_PSTACK_TRUE = @COMPILE_PSTACK_TRUE@
CONF_COMMAND = @CONF_COMMAND@
CP = @CP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLDFLAGS = @CXXLDFLAGS@
CXX_VERSION = @CXX_VERSION@
CYGPATH_W = @CYGPATH_W@
DARWIN_MWCC_FALSE = @DARWIN_MWCC_FALSE@
DARWIN_MWCC_TRUE = @DARWIN_MWCC_TRUE@
DEFS = @DEFS@ @NDB_DEFS@ $(DEFS_LOC) $(NDB_EXTRA_FLAGS)
DEPDIR = @DEPDIR@
DOT_FRM_VERSION = @DOT_FRM_VERSION@
DOXYGEN = @DOXYGEN@
DVIS = @DVIS@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FIND_PROC = @FIND_PROC@
GETCONF = @GETCONF@
GXX = @GXX@
HAVE_NDBCLUSTER_DB_FALSE = @HAVE_NDBCLUSTER_DB_FALSE@
HAVE_NDBCLUSTER_DB_TRUE = @HAVE_NDBCLUSTER_DB_TRUE@
HAVE_NETWARE_FALSE = @HAVE_NETWARE_FALSE@
HAVE_NETWARE_TRUE = @HAVE_NETWARE_TRUE@
HAVE_YASSL_FALSE = @HAVE_YASSL_FALSE@
HAVE_YASSL_TRUE = @HAVE_YASSL_TRUE@
HOSTNAME = @HOSTNAME@
ICHECK = @ICHECK@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KILL = @KILL@
LD = @LD@
LDFLAGS = @LDFLAGS@
LD_VERSION_SCRIPT = @LD_VERSION_SCRIPT@
LIBDL = @LIBDL@
LIBEDIT_LOBJECTS = @LIBEDIT_LOBJECTS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_EXTRA_CCFLAGS = @LIB_EXTRA_CCFLAGS@
LM_CFLAGS = @LM_CFLAGS@
LN = @LN@
LN_CP_F = @LN_CP_F@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MACHINE_TYPE = @MACHINE_TYPE@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MAKE_BINARY_DISTRIBUTION_OPTIONS = @MAKE_BINARY_DISTRIBUTION_OPTIONS@
MAKE_SHELL = @MAKE_SHELL@
MV = @MV@
MYSQLD_DEFAULT_SWITCHES = @MYSQLD_DEFAULT_SWITCHES@
MYSQLD_EXTRA_LDFLAGS = @MYSQLD_EXTRA_LDFLAGS@
MYSQLD_EXTRA_LIBS = @MYSQLD_EXTRA_LIBS@
MYSQLD_USER = @MYSQLD_USER@
MYSQL_BASE_VERSION = @MYSQL_BASE_VERSION@
MYSQL_NO_DASH_VERSION = @MYSQL_NO_DASH_VERSION@
MYSQL_PREVIOUS_BASE_VERSION = @MYSQL_PREVIOUS_BASE_VERSION@
MYSQL_SERVER_SUFFIX = @MYSQL_SERVER_SUFFIX@
MYSQL_TCP_PORT = @MYSQL_TCP_PORT@
MYSQL_TCP_PORT_DEFAULT = @MYSQL_TCP_PORT_DEFAULT@
MYSQL_UNIX_ADDR = @MYSQL_UNIX_ADDR@
MYSQL_VERSION_ID = @MYSQL_VERSION_ID@
NDB_DEFS = @NDB_DEFS@
NDB_LD_VERSION_SCRIPT = @NDB_LD_VERSION_SCRIPT@
NDB_SCI_INCLUDES = @NDB_SCI_INCLUDES@
NDB_SCI_LIBS = @NDB_SCI_LIBS@
NDB_SHARED_LIB_MAJOR_VERSION = @NDB_SHARED_LIB_MAJOR_VERSION@
NDB_SHARED_LIB_VERSION = @NDB_SHARED_LIB_VERSION@
NDB_SIZEOF_CHAR = @NDB_SIZEOF_CHAR@
NDB_SIZEOF_CHARP = @NDB_SIZEOF_CHARP@
NDB_SIZEOF_INT = @NDB_SIZEOF_INT@
NDB_SIZEOF_LONG = @NDB_SIZEOF_LONG@
NDB_SIZEOF_LONG_LONG = @NDB_SIZEOF_LONG_LONG@
NDB_SIZEOF_SHORT = @NDB_SIZEOF_SHORT@
NDB_VERSION_BUILD = @NDB_VERSION_BUILD@
NDB_VERSION_MAJOR = @NDB_VERSION_MAJOR@
NDB_VERSION_MINOR = @NDB_VERSION_MINOR@
NDB_VERSION_STATUS = @NDB_VERSION_STATUS@
NM = @NM@
NOINST_LDFLAGS = @NOINST_LDFLAGS@
NON_THREADED_LIBS = @NON_THREADED_LIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PDFMANUAL = @PDFMANUAL@
PERL = @PERL@
PERL5 = @PERL5@
PROTOCOL_VERSION = @PROTOCOL_VERSION@
PS = @PS@
RANLIB = @RANLIB@
RM = @RM@
SAVE_ASFLAGS = @SAVE_ASFLAGS@
SAVE_CFLAGS = @SAVE_CFLAGS@
SAVE_CXXFLAGS = @SAVE_CXXFLAGS@
SAVE_CXXLDFLAGS = @SAVE_CXXLDFLAGS@
SAVE_LDFLAGS = @SAVE_LDFLAGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_LIB_MAJOR_VERSION = @SHARED_LIB_MAJOR_VERSION@
SHARED_LIB_VERSION = @SHARED_LIB_VERSION@
SHELL = @SHELL@
STATIC_NSS_FLAGS = @STATIC_NSS_FLAGS@
STRIP = @STRIP@
SYSTEM_TYPE = @SYSTEM_TYPE@
TAR = @TAR@
TARGET_LINUX = @TARGET_LINUX@
TERMCAP_LIB = @TERMCAP_LIB@
THREAD_LOBJECTS = @THREAD_LOBJECTS@
VERSION = @VERSION@
WRAPLIBS = @WRAPLIBS@
YACC = @YACC@
ZLIB_DEPS = @ZLIB_DEPS@
ZLIB_INCLUDES = @ZLIB_INCLUDES@
ZLIB_LIBS = @ZLIB_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_GETCONF = @ac_ct_GETCONF@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bdb_includes = @bdb_includes@
bdb_libs = @bdb_libs@
bdb_libs_with_path = @bdb_libs_with_path@
bench_dirs = @bench_dirs@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
docs_dirs = @docs_dirs@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
innodb_includes = @innodb_includes@
innodb_libs = @innodb_libs@
innodb_system_libs = @innodb_system_libs@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libmysqld_dirs = @libmysqld_dirs@
linked_client_targets = @linked_client_targets@
linked_libmysqld_targets = @linked_libmysqld_targets@
linked_netware_sources = @linked_netware_sources@
localstatedir = @localstatedir@
man1_files = @man1_files@
man8_files = @man8_files@
man_dirs = @man_dirs@
mandir = @mandir@
mkdir_p = @mkdir_p@
ndb_bin_am_ldflags = @ndb_bin_am_ldflags@
ndb_cxxflags_fix = @ndb_cxxflags_fix@
ndb_mgmclient_libs = @ndb_mgmclient_libs@
ndb_opt_subdirs = @ndb_opt_subdirs@
ndb_port = @ndb_port@
ndb_transporter_opt_objs = @ndb_transporter_opt_objs@
ndbcluster_includes = @ndbcluster_includes@
ndbcluster_libs = @ndbcluster_libs@
ndbcluster_system_libs = @ndbcluster_system_libs@
netware_dir = @netware_dir@
oldincludedir = @oldincludedir@
openssl_includes = @openssl_includes@
openssl_libs = @openssl_libs@
prefix = @prefix@
program_transform_name = @program_transform_name@
pstack_dirs = @pstack_dirs@
pstack_libs = @pstack_libs@
readline_basedir = @readline_basedir@
readline_dir = @readline_dir@
readline_h_ln_cmd = @readline_h_ln_cmd@
readline_link = @readline_link@
readline_topdir = @readline_topdir@
sbindir = @sbindir@
server_scripts = @server_scripts@
sharedstatedir = @sharedstatedir@
sql_client_dirs = @sql_client_dirs@
sql_server_dirs = @sql_server_dirs@
sql_union_dirs = @sql_union_dirs@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
thread_dirs = @thread_dirs@
tools_dirs = @tools_dirs@
uname_prog = @uname_prog@
yassl_dir = @yassl_dir@
yassl_h_ln_cmd = @yassl_h_ln_cmd@
yassl_libs = @yassl_libs@
yassl_taocrypt_extra_cxxflags = @yassl_taocrypt_extra_cxxflags@
zlib_dir = @zlib_dir@
SUBDIRS = bank
#flexTimedAsynch
#testBlobs
#flex_bench_mysql
create_all_tabs_SOURCES = create_all_tabs.cpp
create_tab_SOURCES = create_tab.cpp
drop_all_tabs_SOURCES = drop_all_tabs.cpp
flexAsynch_SOURCES = flexAsynch.cpp
flexBench_SOURCES = flexBench.cpp
flexHammer_SOURCES = flexHammer.cpp
flexTT_SOURCES = flexTT.cpp
#flexTimedAsynch_SOURCES = flexTimedAsynch.cpp
#flex_bench_mysql_SOURCES = flex_bench_mysql.cpp
testBackup_SOURCES = testBackup.cpp
testBasic_SOURCES = testBasic.cpp
testBasicAsynch_SOURCES = testBasicAsynch.cpp
testBlobs_SOURCES = testBlobs.cpp
testDataBuffers_SOURCES = testDataBuffers.cpp
testDict_SOURCES = testDict.cpp
testIndex_SOURCES = testIndex.cpp
testMgm_SOURCES = testMgm.cpp
testNdbApi_SOURCES = testNdbApi.cpp
testNodeRestart_SOURCES = testNodeRestart.cpp
testOIBasic_SOURCES = testOIBasic.cpp
testOperations_SOURCES = testOperations.cpp
testRestartGci_SOURCES = testRestartGci.cpp
testScan_SOURCES = testScan.cpp ScanFunctions.hpp
testInterpreter_SOURCES = testInterpreter.cpp
testScanFilter_SOURCES = testScanFilter.cpp
testScanInterpreter_SOURCES = testScanInterpreter.cpp ScanFilter.hpp ScanInterpretTest.hpp 
testScanPerf_SOURCES = testScanPerf.cpp
testSystemRestart_SOURCES = testSystemRestart.cpp
testTimeout_SOURCES = testTimeout.cpp
testTransactions_SOURCES = testTransactions.cpp
testDeadlock_SOURCES = testDeadlock.cpp
test_event_SOURCES = test_event.cpp
ndbapi_slow_select_SOURCES = slow_select.cpp
testReadPerf_SOURCES = testReadPerf.cpp
testLcp_SOURCES = testLcp.cpp
testPartitioning_SOURCES = testPartitioning.cpp
testBitfield_SOURCES = testBitfield.cpp
DbCreate_SOURCES = bench/mainPopulate.cpp bench/dbPopulate.cpp bench/userInterface.cpp bench/dbPopulate.h bench/userInterface.h bench/testData.h bench/testDefinitions.h bench/ndb_schema.hpp bench/ndb_error.hpp
DbAsyncGenerator_SOURCES = bench/mainAsyncGenerator.cpp bench/asyncGenerator.cpp bench/ndb_async2.cpp bench/dbGenerator.h bench/macros.h bench/userInterface.h bench/testData.h bench/testDefinitions.h bench/ndb_schema.hpp bench/ndb_error.hpp
test_event_multi_table_SOURCES = test_event_multi_table.cpp
testSRBank_SOURCES = testSRBank.cpp
test_event_merge_SOURCES = test_event_merge.cpp
INCLUDES_LOC = -I$(top_srcdir)/ndb/include/kernel
ndbbindir = "$(libexecdir)"
ndbtoolsdir = "$(bindir)"
ndbtestdir = "$(bindir)"
ndblibdir = "$(pkglibdir)"
ndbincludedir = "$(pkgincludedir)/ndb"
ndbapiincludedir = "$(pkgincludedir)/ndb/ndbapi"
mgmapiincludedir = "$(pkgincludedir)/ndb/mgmapi"
INCLUDES = $(INCLUDES_LOC) -I$(top_srcdir) -I$(top_builddir)/include \
	-I$(top_builddir)/ndb/include -I$(top_srcdir)/include \
	-I$(top_srcdir)/ndb/include -I$(top_srcdir)/ndb/include/ndbapi \
	-I$(top_srcdir)/ndb/include/util \
	-I$(top_srcdir)/ndb/include/portlib \
	-I$(top_srcdir)/ndb/test/include \
	-I$(top_srcdir)/ndb/include/mgmapi
LDADD = $(LDADD_LOC) $(top_builddir)/ndb/test/src/libNDBT.a \
	$(top_builddir)/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a @NDB_SCI_LIBS@
NDB_CXXFLAGS = @ndb_cxxflags_fix@ $(NDB_CXXFLAGS_LOC) 
testBackup_LDADD = $(LDADD) bank/libbank.a
testSRBank_LDADD = bank/libbank.a $(LDADD) 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/ndb/config/common.mk.am $(top_srcdir)/ndb/config/type_ndbapitest.mk.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  ndb/test/ndbapi/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  ndb/test/ndbapi/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-ndbtestPROGRAMS: $(ndbtest_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(ndbtestdir)" || $(mkdir_p) "$(DESTDIR)$(ndbtestdir)"
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(ndbtestPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(ndbtestdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(ndbtestPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(ndbtestdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-ndbtestPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(ndbtestdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ndbtestdir)/$$f"; \
	done

clean-ndbtestPROGRAMS:
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
DbAsyncGenerator$(EXEEXT): $(DbAsyncGenerator_OBJECTS) $(DbAsyncGenerator_DEPENDENCIES) 
	@rm -f DbAsyncGenerator$(EXEEXT)
	$(CXXLINK) $(DbAsyncGenerator_LDFLAGS) $(DbAsyncGenerator_OBJECTS) $(DbAsyncGenerator_LDADD) $(LIBS)
DbCreate$(EXEEXT): $(DbCreate_OBJECTS) $(DbCreate_DEPENDENCIES) 
	@rm -f DbCreate$(EXEEXT)
	$(CXXLINK) $(DbCreate_LDFLAGS) $(DbCreate_OBJECTS) $(DbCreate_LDADD) $(LIBS)
create_all_tabs$(EXEEXT): $(create_all_tabs_OBJECTS) $(create_all_tabs_DEPENDENCIES) 
	@rm -f create_all_tabs$(EXEEXT)
	$(CXXLINK) $(create_all_tabs_LDFLAGS) $(create_all_tabs_OBJECTS) $(create_all_tabs_LDADD) $(LIBS)
create_tab$(EXEEXT): $(create_tab_OBJECTS) $(create_tab_DEPENDENCIES) 
	@rm -f create_tab$(EXEEXT)
	$(CXXLINK) $(create_tab_LDFLAGS) $(create_tab_OBJECTS) $(create_tab_LDADD) $(LIBS)
drop_all_tabs$(EXEEXT): $(drop_all_tabs_OBJECTS) $(drop_all_tabs_DEPENDENCIES) 
	@rm -f drop_all_tabs$(EXEEXT)
	$(CXXLINK) $(drop_all_tabs_LDFLAGS) $(drop_all_tabs_OBJECTS) $(drop_all_tabs_LDADD) $(LIBS)
flexAsynch$(EXEEXT): $(flexAsynch_OBJECTS) $(flexAsynch_DEPENDENCIES) 
	@rm -f flexAsynch$(EXEEXT)
	$(CXXLINK) $(flexAsynch_LDFLAGS) $(flexAsynch_OBJECTS) $(flexAsynch_LDADD) $(LIBS)
flexBench$(EXEEXT): $(flexBench_OBJECTS) $(flexBench_DEPENDENCIES) 
	@rm -f flexBench$(EXEEXT)
	$(CXXLINK) $(flexBench_LDFLAGS) $(flexBench_OBJECTS) $(flexBench_LDADD) $(LIBS)
flexHammer$(EXEEXT): $(flexHammer_OBJECTS) $(flexHammer_DEPENDENCIES) 
	@rm -f flexHammer$(EXEEXT)
	$(CXXLINK) $(flexHammer_LDFLAGS) $(flexHammer_OBJECTS) $(flexHammer_LDADD) $(LIBS)
flexTT$(EXEEXT): $(flexTT_OBJECTS) $(flexTT_DEPENDENCIES) 
	@rm -f flexTT$(EXEEXT)
	$(CXXLINK) $(flexTT_LDFLAGS) $(flexTT_OBJECTS) $(flexTT_LDADD) $(LIBS)
ndbapi_slow_select$(EXEEXT): $(ndbapi_slow_select_OBJECTS) $(ndbapi_slow_select_DEPENDENCIES) 
	@rm -f ndbapi_slow_select$(EXEEXT)
	$(CXXLINK) $(ndbapi_slow_select_LDFLAGS) $(ndbapi_slow_select_OBJECTS) $(ndbapi_slow_select_LDADD) $(LIBS)
testBackup$(EXEEXT): $(testBackup_OBJECTS) $(testBackup_DEPENDENCIES) 
	@rm -f testBackup$(EXEEXT)
	$(CXXLINK) $(testBackup_LDFLAGS) $(testBackup_OBJECTS) $(testBackup_LDADD) $(LIBS)
testBasic$(EXEEXT): $(testBasic_OBJECTS) $(testBasic_DEPENDENCIES) 
	@rm -f testBasic$(EXEEXT)
	$(CXXLINK) $(testBasic_LDFLAGS) $(testBasic_OBJECTS) $(testBasic_LDADD) $(LIBS)
testBasicAsynch$(EXEEXT): $(testBasicAsynch_OBJECTS) $(testBasicAsynch_DEPENDENCIES) 
	@rm -f testBasicAsynch$(EXEEXT)
	$(CXXLINK) $(testBasicAsynch_LDFLAGS) $(testBasicAsynch_OBJECTS) $(testBasicAsynch_LDADD) $(LIBS)
testBitfield$(EXEEXT): $(testBitfield_OBJECTS) $(testBitfield_DEPENDENCIES) 
	@rm -f testBitfield$(EXEEXT)
	$(CXXLINK) $(testBitfield_LDFLAGS) $(testBitfield_OBJECTS) $(testBitfield_LDADD) $(LIBS)
testBlobs$(EXEEXT): $(testBlobs_OBJECTS) $(testBlobs_DEPENDENCIES) 
	@rm -f testBlobs$(EXEEXT)
	$(CXXLINK) $(testBlobs_LDFLAGS) $(testBlobs_OBJECTS) $(testBlobs_LDADD) $(LIBS)
testDataBuffers$(EXEEXT): $(testDataBuffers_OBJECTS) $(testDataBuffers_DEPENDENCIES) 
	@rm -f testDataBuffers$(EXEEXT)
	$(CXXLINK) $(testDataBuffers_LDFLAGS) $(testDataBuffers_OBJECTS) $(testDataBuffers_LDADD) $(LIBS)
testDeadlock$(EXEEXT): $(testDeadlock_OBJECTS) $(testDeadlock_DEPENDENCIES) 
	@rm -f testDeadlock$(EXEEXT)
	$(CXXLINK) $(testDeadlock_LDFLAGS) $(testDeadlock_OBJECTS) $(testDeadlock_LDADD) $(LIBS)
testDict$(EXEEXT): $(testDict_OBJECTS) $(testDict_DEPENDENCIES) 
	@rm -f testDict$(EXEEXT)
	$(CXXLINK) $(testDict_LDFLAGS) $(testDict_OBJECTS) $(testDict_LDADD) $(LIBS)
testIndex$(EXEEXT): $(testIndex_OBJECTS) $(testIndex_DEPENDENCIES) 
	@rm -f testIndex$(EXEEXT)
	$(CXXLINK) $(testIndex_LDFLAGS) $(testIndex_OBJECTS) $(testIndex_LDADD) $(LIBS)
testInterpreter$(EXEEXT): $(testInterpreter_OBJECTS) $(testInterpreter_DEPENDENCIES) 
	@rm -f testInterpreter$(EXEEXT)
	$(CXXLINK) $(testInterpreter_LDFLAGS) $(testInterpreter_OBJECTS) $(testInterpreter_LDADD) $(LIBS)
testLcp$(EXEEXT): $(testLcp_OBJECTS) $(testLcp_DEPENDENCIES) 
	@rm -f testLcp$(EXEEXT)
	$(CXXLINK) $(testLcp_LDFLAGS) $(testLcp_OBJECTS) $(testLcp_LDADD) $(LIBS)
testMgm$(EXEEXT): $(testMgm_OBJECTS) $(testMgm_DEPENDENCIES) 
	@rm -f testMgm$(EXEEXT)
	$(CXXLINK) $(testMgm_LDFLAGS) $(testMgm_OBJECTS) $(testMgm_LDADD) $(LIBS)
testNdbApi$(EXEEXT): $(testNdbApi_OBJECTS) $(testNdbApi_DEPENDENCIES) 
	@rm -f testNdbApi$(EXEEXT)
	$(CXXLINK) $(testNdbApi_LDFLAGS) $(testNdbApi_OBJECTS) $(testNdbApi_LDADD) $(LIBS)
testNodeRestart$(EXEEXT): $(testNodeRestart_OBJECTS) $(testNodeRestart_DEPENDENCIES) 
	@rm -f testNodeRestart$(EXEEXT)
	$(CXXLINK) $(testNodeRestart_LDFLAGS) $(testNodeRestart_OBJECTS) $(testNodeRestart_LDADD) $(LIBS)
testOIBasic$(EXEEXT): $(testOIBasic_OBJECTS) $(testOIBasic_DEPENDENCIES) 
	@rm -f testOIBasic$(EXEEXT)
	$(CXXLINK) $(testOIBasic_LDFLAGS) $(testOIBasic_OBJECTS) $(testOIBasic_LDADD) $(LIBS)
testOperations$(EXEEXT): $(testOperations_OBJECTS) $(testOperations_DEPENDENCIES) 
	@rm -f testOperations$(EXEEXT)
	$(CXXLINK) $(testOperations_LDFLAGS) $(testOperations_OBJECTS) $(testOperations_LDADD) $(LIBS)
testPartitioning$(EXEEXT): $(testPartitioning_OBJECTS) $(testPartitioning_DEPENDENCIES) 
	@rm -f testPartitioning$(EXEEXT)
	$(CXXLINK) $(testPartitioning_LDFLAGS) $(testPartitioning_OBJECTS) $(testPartitioning_LDADD) $(LIBS)
testReadPerf$(EXEEXT): $(testReadPerf_OBJECTS) $(testReadPerf_DEPENDENCIES) 
	@rm -f testReadPerf$(EXEEXT)
	$(CXXLINK) $(testReadPerf_LDFLAGS) $(testReadPerf_OBJECTS) $(testReadPerf_LDADD) $(LIBS)
testRestartGci$(EXEEXT): $(testRestartGci_OBJECTS) $(testRestartGci_DEPENDENCIES) 
	@rm -f testRestartGci$(EXEEXT)
	$(CXXLINK) $(testRestartGci_LDFLAGS) $(testRestartGci_OBJECTS) $(testRestartGci_LDADD) $(LIBS)
testSRBank$(EXEEXT): $(testSRBank_OBJECTS) $(testSRBank_DEPENDENCIES) 
	@rm -f testSRBank$(EXEEXT)
	$(CXXLINK) $(testSRBank_LDFLAGS) $(testSRBank_OBJECTS) $(testSRBank_LDADD) $(LIBS)
testScan$(EXEEXT): $(testScan_OBJECTS) $(testScan_DEPENDENCIES) 
	@rm -f testScan$(EXEEXT)
	$(CXXLINK) $(testScan_LDFLAGS) $(testScan_OBJECTS) $(testScan_LDADD) $(LIBS)
testScanFilter$(EXEEXT): $(testScanFilter_OBJECTS) $(testScanFilter_DEPENDENCIES) 
	@rm -f testScanFilter$(EXEEXT)
	$(CXXLINK) $(testScanFilter_LDFLAGS) $(testScanFilter_OBJECTS) $(testScanFilter_LDADD) $(LIBS)
testScanInterpreter$(EXEEXT): $(testScanInterpreter_OBJECTS) $(testScanInterpreter_DEPENDENCIES) 
	@rm -f testScanInterpreter$(EXEEXT)
	$(CXXLINK) $(testScanInterpreter_LDFLAGS) $(testScanInterpreter_OBJECTS) $(testScanInterpreter_LDADD) $(LIBS)
testScanPerf$(EXEEXT): $(testScanPerf_OBJECTS) $(testScanPerf_DEPENDENCIES) 
	@rm -f testScanPerf$(EXEEXT)
	$(CXXLINK) $(testScanPerf_LDFLAGS) $(testScanPerf_OBJECTS) $(testScanPerf_LDADD) $(LIBS)
testSystemRestart$(EXEEXT): $(testSystemRestart_OBJECTS) $(testSystemRestart_DEPENDENCIES) 
	@rm -f testSystemRestart$(EXEEXT)
	$(CXXLINK) $(testSystemRestart_LDFLAGS) $(testSystemRestart_OBJECTS) $(testSystemRestart_LDADD) $(LIBS)
testTimeout$(EXEEXT): $(testTimeout_OBJECTS) $(testTimeout_DEPENDENCIES) 
	@rm -f testTimeout$(EXEEXT)
	$(CXXLINK) $(testTimeout_LDFLAGS) $(testTimeout_OBJECTS) $(testTimeout_LDADD) $(LIBS)
testTransactions$(EXEEXT): $(testTransactions_OBJECTS) $(testTransactions_DEPENDENCIES) 
	@rm -f testTransactions$(EXEEXT)
	$(CXXLINK) $(testTransactions_LDFLAGS) $(testTransactions_OBJECTS) $(testTransactions_LDADD) $(LIBS)
test_event$(EXEEXT): $(test_event_OBJECTS) $(test_event_DEPENDENCIES) 
	@rm -f test_event$(EXEEXT)
	$(CXXLINK) $(test_event_LDFLAGS) $(test_event_OBJECTS) $(test_event_LDADD) $(LIBS)
test_event_merge$(EXEEXT): $(test_event_merge_OBJECTS) $(test_event_merge_DEPENDENCIES) 
	@rm -f test_event_merge$(EXEEXT)
	$(CXXLINK) $(test_event_merge_LDFLAGS) $(test_event_merge_OBJECTS) $(test_event_merge_LDADD) $(LIBS)
test_event_multi_table$(EXEEXT): $(test_event_multi_table_OBJECTS) $(test_event_multi_table_DEPENDENCIES) 
	@rm -f test_event_multi_table$(EXEEXT)
	$(CXXLINK) $(test_event_multi_table_LDFLAGS) $(test_event_multi_table_OBJECTS) $(test_event_multi_table_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asyncGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_all_tabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbPopulate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/drop_all_tabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flexAsynch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flexBench.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flexHammer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flexTT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainAsyncGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainPopulate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndb_async2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slow_select.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBackup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBasic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBasicAsynch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBitfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBlobs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testDataBuffers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testDeadlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testDict.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testInterpreter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testLcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testMgm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testNdbApi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testNodeRestart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testOIBasic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testOperations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPartitioning.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testReadPerf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testRestartGci.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testSRBank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testScan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testScanFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testScanInterpreter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testScanPerf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testSystemRestart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testTimeout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testTransactions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_event.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_event_merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_event_multi_table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/userInterface.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mainAsyncGenerator.o: bench/mainAsyncGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainAsyncGenerator.o -MD -MP -MF "$(DEPDIR)/mainAsyncGenerator.Tpo" -c -o mainAsyncGenerator.o `test -f 'bench/mainAsyncGenerator.cpp' || echo '$(srcdir)/'`bench/mainAsyncGenerator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mainAsyncGenerator.Tpo" "$(DEPDIR)/mainAsyncGenerator.Po"; else rm -f "$(DEPDIR)/mainAsyncGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/mainAsyncGenerator.cpp' object='mainAsyncGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainAsyncGenerator.o `test -f 'bench/mainAsyncGenerator.cpp' || echo '$(srcdir)/'`bench/mainAsyncGenerator.cpp

mainAsyncGenerator.obj: bench/mainAsyncGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainAsyncGenerator.obj -MD -MP -MF "$(DEPDIR)/mainAsyncGenerator.Tpo" -c -o mainAsyncGenerator.obj `if test -f 'bench/mainAsyncGenerator.cpp'; then $(CYGPATH_W) 'bench/mainAsyncGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mainAsyncGenerator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mainAsyncGenerator.Tpo" "$(DEPDIR)/mainAsyncGenerator.Po"; else rm -f "$(DEPDIR)/mainAsyncGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/mainAsyncGenerator.cpp' object='mainAsyncGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainAsyncGenerator.obj `if test -f 'bench/mainAsyncGenerator.cpp'; then $(CYGPATH_W) 'bench/mainAsyncGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mainAsyncGenerator.cpp'; fi`

asyncGenerator.o: bench/asyncGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asyncGenerator.o -MD -MP -MF "$(DEPDIR)/asyncGenerator.Tpo" -c -o asyncGenerator.o `test -f 'bench/asyncGenerator.cpp' || echo '$(srcdir)/'`bench/asyncGenerator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/asyncGenerator.Tpo" "$(DEPDIR)/asyncGenerator.Po"; else rm -f "$(DEPDIR)/asyncGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/asyncGenerator.cpp' object='asyncGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asyncGenerator.o `test -f 'bench/asyncGenerator.cpp' || echo '$(srcdir)/'`bench/asyncGenerator.cpp

asyncGenerator.obj: bench/asyncGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asyncGenerator.obj -MD -MP -MF "$(DEPDIR)/asyncGenerator.Tpo" -c -o asyncGenerator.obj `if test -f 'bench/asyncGenerator.cpp'; then $(CYGPATH_W) 'bench/asyncGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/asyncGenerator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/asyncGenerator.Tpo" "$(DEPDIR)/asyncGenerator.Po"; else rm -f "$(DEPDIR)/asyncGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/asyncGenerator.cpp' object='asyncGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asyncGenerator.obj `if test -f 'bench/asyncGenerator.cpp'; then $(CYGPATH_W) 'bench/asyncGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/asyncGenerator.cpp'; fi`

ndb_async2.o: bench/ndb_async2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ndb_async2.o -MD -MP -MF "$(DEPDIR)/ndb_async2.Tpo" -c -o ndb_async2.o `test -f 'bench/ndb_async2.cpp' || echo '$(srcdir)/'`bench/ndb_async2.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ndb_async2.Tpo" "$(DEPDIR)/ndb_async2.Po"; else rm -f "$(DEPDIR)/ndb_async2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/ndb_async2.cpp' object='ndb_async2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ndb_async2.o `test -f 'bench/ndb_async2.cpp' || echo '$(srcdir)/'`bench/ndb_async2.cpp

ndb_async2.obj: bench/ndb_async2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ndb_async2.obj -MD -MP -MF "$(DEPDIR)/ndb_async2.Tpo" -c -o ndb_async2.obj `if test -f 'bench/ndb_async2.cpp'; then $(CYGPATH_W) 'bench/ndb_async2.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ndb_async2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ndb_async2.Tpo" "$(DEPDIR)/ndb_async2.Po"; else rm -f "$(DEPDIR)/ndb_async2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/ndb_async2.cpp' object='ndb_async2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ndb_async2.obj `if test -f 'bench/ndb_async2.cpp'; then $(CYGPATH_W) 'bench/ndb_async2.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ndb_async2.cpp'; fi`

mainPopulate.o: bench/mainPopulate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainPopulate.o -MD -MP -MF "$(DEPDIR)/mainPopulate.Tpo" -c -o mainPopulate.o `test -f 'bench/mainPopulate.cpp' || echo '$(srcdir)/'`bench/mainPopulate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mainPopulate.Tpo" "$(DEPDIR)/mainPopulate.Po"; else rm -f "$(DEPDIR)/mainPopulate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/mainPopulate.cpp' object='mainPopulate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainPopulate.o `test -f 'bench/mainPopulate.cpp' || echo '$(srcdir)/'`bench/mainPopulate.cpp

mainPopulate.obj: bench/mainPopulate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainPopulate.obj -MD -MP -MF "$(DEPDIR)/mainPopulate.Tpo" -c -o mainPopulate.obj `if test -f 'bench/mainPopulate.cpp'; then $(CYGPATH_W) 'bench/mainPopulate.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mainPopulate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/mainPopulate.Tpo" "$(DEPDIR)/mainPopulate.Po"; else rm -f "$(DEPDIR)/mainPopulate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/mainPopulate.cpp' object='mainPopulate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainPopulate.obj `if test -f 'bench/mainPopulate.cpp'; then $(CYGPATH_W) 'bench/mainPopulate.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mainPopulate.cpp'; fi`

dbPopulate.o: bench/dbPopulate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dbPopulate.o -MD -MP -MF "$(DEPDIR)/dbPopulate.Tpo" -c -o dbPopulate.o `test -f 'bench/dbPopulate.cpp' || echo '$(srcdir)/'`bench/dbPopulate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dbPopulate.Tpo" "$(DEPDIR)/dbPopulate.Po"; else rm -f "$(DEPDIR)/dbPopulate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/dbPopulate.cpp' object='dbPopulate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dbPopulate.o `test -f 'bench/dbPopulate.cpp' || echo '$(srcdir)/'`bench/dbPopulate.cpp

dbPopulate.obj: bench/dbPopulate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dbPopulate.obj -MD -MP -MF "$(DEPDIR)/dbPopulate.Tpo" -c -o dbPopulate.obj `if test -f 'bench/dbPopulate.cpp'; then $(CYGPATH_W) 'bench/dbPopulate.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/dbPopulate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dbPopulate.Tpo" "$(DEPDIR)/dbPopulate.Po"; else rm -f "$(DEPDIR)/dbPopulate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/dbPopulate.cpp' object='dbPopulate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dbPopulate.obj `if test -f 'bench/dbPopulate.cpp'; then $(CYGPATH_W) 'bench/dbPopulate.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/dbPopulate.cpp'; fi`

userInterface.o: bench/userInterface.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT userInterface.o -MD -MP -MF "$(DEPDIR)/userInterface.Tpo" -c -o userInterface.o `test -f 'bench/userInterface.cpp' || echo '$(srcdir)/'`bench/userInterface.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/userInterface.Tpo" "$(DEPDIR)/userInterface.Po"; else rm -f "$(DEPDIR)/userInterface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/userInterface.cpp' object='userInterface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o userInterface.o `test -f 'bench/userInterface.cpp' || echo '$(srcdir)/'`bench/userInterface.cpp

userInterface.obj: bench/userInterface.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT userInterface.obj -MD -MP -MF "$(DEPDIR)/userInterface.Tpo" -c -o userInterface.obj `if test -f 'bench/userInterface.cpp'; then $(CYGPATH_W) 'bench/userInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/userInterface.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/userInterface.Tpo" "$(DEPDIR)/userInterface.Po"; else rm -f "$(DEPDIR)/userInterface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bench/userInterface.cpp' object='userInterface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o userInterface.obj `if test -f 'bench/userInterface.cpp'; then $(CYGPATH_W) 'bench/userInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/userInterface.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../../ndb/config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(ndbtestdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-ndbtestPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-ndbtestPROGRAMS

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-ndbtestPROGRAMS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libtool clean-ndbtestPROGRAMS \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-ndbtestPROGRAMS \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-ndbtestPROGRAMS


# Don't update the files from bitkeeper
%::SCCS/s.%

windoze-dsp: flexBench.dsp testBasic.dsp testBlobs.dsp \
             testScan.dsp

flexBench.dsp: Makefile \
               $(top_srcdir)/ndb/config/win-prg.am \
               $(top_srcdir)/ndb/config/win-name \
               $(top_srcdir)/ndb/config/win-includes \
               $(top_srcdir)/ndb/config/win-sources \
               $(top_srcdir)/ndb/config/win-libraries
	cat $(top_srcdir)/ndb/config/win-prg.am > $@
	@$(top_srcdir)/ndb/config/win-name $@ flexBench
	@$(top_srcdir)/ndb/config/win-includes $@ $(INCLUDES)
	@$(top_srcdir)/ndb/config/win-sources $@ $(flexBench_SOURCES)
	@$(top_srcdir)/ndb/config/win-libraries $@ LINK $(LDADD)

testBasic.dsp: Makefile \
               $(top_srcdir)/ndb/config/win-prg.am \
               $(top_srcdir)/ndb/config/win-name \
               $(top_srcdir)/ndb/config/win-includes \
               $(top_srcdir)/ndb/config/win-sources \
               $(top_srcdir)/ndb/config/win-libraries
	cat $(top_srcdir)/ndb/config/win-prg.am > $@
	@$(top_srcdir)/ndb/config/win-name $@ testBasic
	@$(top_srcdir)/ndb/config/win-includes $@ $(INCLUDES)
	@$(top_srcdir)/ndb/config/win-sources $@ $(testBasic_SOURCES)
	@$(top_srcdir)/ndb/config/win-libraries $@ LINK $(LDADD)

testOIBasic.dsp: Makefile \
               $(top_srcdir)/ndb/config/win-prg.am \
               $(top_srcdir)/ndb/config/win-name \
               $(top_srcdir)/ndb/config/win-includes \
               $(top_srcdir)/ndb/config/win-sources \
               $(top_srcdir)/ndb/config/win-libraries
	cat $(top_srcdir)/ndb/config/win-prg.am > $@
	@$(top_srcdir)/ndb/config/win-name $@ testOIBasic
	@$(top_srcdir)/ndb/config/win-includes $@ $(INCLUDES)
	@$(top_srcdir)/ndb/config/win-sources $@ $(testOIBasic_SOURCES)
	@$(top_srcdir)/ndb/config/win-libraries $@ LINK $(LDADD)

testBlobs.dsp: Makefile \
               $(top_srcdir)/ndb/config/win-prg.am \
               $(top_srcdir)/ndb/config/win-name \
               $(top_srcdir)/ndb/config/win-includes \
               $(top_srcdir)/ndb/config/win-sources \
               $(top_srcdir)/ndb/config/win-libraries
	cat $(top_srcdir)/ndb/config/win-prg.am > $@
	@$(top_srcdir)/ndb/config/win-name $@ testBlobs
	@$(top_srcdir)/ndb/config/win-includes $@ $(INCLUDES)
	@$(top_srcdir)/ndb/config/win-sources $@ $(testBlobs_SOURCES)
	@$(top_srcdir)/ndb/config/win-libraries $@ LINK $(LDADD)

testScan.dsp: Makefile \
               $(top_srcdir)/ndb/config/win-prg.am \
               $(top_srcdir)/ndb/config/win-name \
               $(top_srcdir)/ndb/config/win-includes \
               $(top_srcdir)/ndb/config/win-sources \
               $(top_srcdir)/ndb/config/win-libraries
	cat $(top_srcdir)/ndb/config/win-prg.am > $@
	@$(top_srcdir)/ndb/config/win-name $@ testScan
	@$(top_srcdir)/ndb/config/win-includes $@ $(INCLUDES)
	@$(top_srcdir)/ndb/config/win-sources $@ $(testScan_SOURCES)
	@$(top_srcdir)/ndb/config/win-libraries $@ LINK $(LDADD)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
